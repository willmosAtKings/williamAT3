"""Add recurring fields to Event model

Revision ID: 83ea9fe5da9b
Revises: 42b50575cf86
Create Date: 2025-07-15 04:49:59.031482

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision = '83ea9fe5da9b'
down_revision = '42b50575cf86'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('recurrence_group_id', sa.String(length=36), nullable=True))
        batch_op.alter_column('is_recurring',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.create_index(batch_op.f('ix_events_recurrence_group_id'), ['recurrence_group_id'], unique=False)
        batch_op.drop_column('recurrence')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('events', schema=None) as batch_op:
        batch_op.add_column(sa.Column('recurrence', sqlite.JSON(), nullable=True))
        batch_op.drop_index(batch_op.f('ix_events_recurrence_group_id'))
        batch_op.alter_column('is_recurring',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.drop_column('recurrence_group_id')

    # ### end Alembic commands ###
